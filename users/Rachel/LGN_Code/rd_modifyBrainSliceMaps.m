% rd_modifyBrainSliceMaps.m

% brainSliceMaps is a 1xnSlices cell generated by rd_plotTopographicData2SatFn.m

%% setup
mapName = 'betaM-P';
plotFormat = 'singleRow';
aspectRatio = [1.575 1.75 1]; % use voxel size (for coronal, [Z X Y])
dimToSlice = 2; % 1=Sag, 2=Cor, 4=Ax

% for AV, add black rows to top and bottom of slices
%% generate the original map
brainSliceMaps = rd_plotTopographicData2SatFn(2,'all','full',[.5 -.5],'betaM-P',0,0);

%% modify the map
% create one black row
[rowSize colSize rgbSize] = size(brainSliceMaps{1});
blackRow = zeros(1, colSize, rgbSize);

% add the row
nSlices = numel(brainSliceMaps);
for iSlice = 1:nSlices
%     newSliceMaps{iSlice} = cat(1, blackRow, brainSliceMaps{iSlice}, blackRow);
%     newSliceMaps{iSlice} = cat(1, brainSliceMaps{iSlice}, blackRow);
    newSliceMaps{iSlice} = cat(1, blackRow, brainSliceMaps{iSlice});
end
    
%% plot modified map
f1 = figure('name',mapName);
for iSlice = 1:nSlices

    % get brain slice map
    brainSliceMap = newSliceMaps{iSlice};
    
    % show slice with colored map
    switch plotFormat
        case 'singleRow' % plots slices in reverse order
            nPlotRows = 1;
            nPlotCols = nSlices;
            subplot(nPlotRows, nPlotCols, nPlotCols+1-iSlice)
        otherwise
            error('plotFormat not recognized')
    end
    
    image(brainSliceMap)
    if dimToSlice==4
        title(['Slice ' num2str(slices(iSlice))])
    else
        title(['Slice ' num2str(iSlice)])
    end
    axis off
    axis tight
    
    % set aspect ratio
    daspect(aspectRatio)
end